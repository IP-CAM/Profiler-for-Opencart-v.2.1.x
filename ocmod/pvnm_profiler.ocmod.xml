<?xml version="1.0" encoding="utf-8"?>
<modification>
	<code>pvnm_profiler</code>
	<name>Profiler</name>
	<version>1.0.0</version>
	<author>p0v1n0m@gmail.com</author>
	<link>mailto:p0v1n0m@gmail.com</link>
	<file path="system/library/db.php">
		<operation>
			<search><![CDATA[
public function query($sql) {
			]]></search>
			<add position="replace" offset="2"><![CDATA[
	private $time = 0;
	private $queries = array();

	public function __destruct() {
		$uri = explode('/', $_SERVER['REQUEST_URI']);

		$settings = array();

		$results = $this->db->query("SELECT * FROM " . DB_PREFIX . "setting WHERE store_id = 0 AND `code` = 'pvnm_profiler'");

		foreach ($results->rows as $result) {
			$settings[$result['key']] = $result['value'];
		}

		if (!empty($settings) && ($settings['pvnm_profiler_status'] == 1 || ($settings['pvnm_profiler_status'] == 2 && (!isset($uri[2]) || isset($uri[2]) && $uri[2] != 'admin')))) {
			if ($settings['pvnm_profiler_body_status']) {
				print_r('<pre style="font-size: 11px;">');
				print_r('Page: http://' . $_SERVER['SERVER_NAME'] . $_SERVER['REQUEST_URI'] . '<br>');

				if ($this->time >= $settings['pvnm_profiler_page_time']) {
					print_r('Load Time SQL Queries: <span style="color: red !important;">' . $this->time . ' s</span><br>');
				} else {
					print_r('Load Time SQL Queries: ' . $this->time . ' s<br>');
				}

				print_r('SQL Queries (' . count($this->queries) . '):<br>');

				foreach ($this->queries as $query) {
					if ($query['time'] >= $settings['pvnm_profiler_query_time']) {
						print_r('<span style="color: red !important;">' . $query['time'] . ' s - ' . $query['query'] . '</span><br>');
					} else {
						print_r('<span>' . $query['time'] . ' s - ' . $query['query'] . '</span><br>');
					}
				}

				print_r('</pre>');
			}

			if ($settings['pvnm_profiler_console_status']) {
				$console_log = array();

				foreach ($this->queries as $query) {
					$console_log['queries'][] = $query['time'] . ' s - ' . $query['query'];
				}

				print_r('<script>console.info("Profiler: ' . $this->time . ' s - http://' . $_SERVER['SERVER_NAME'] . $_SERVER['REQUEST_URI'] . '");console.log(' . json_encode($console_log) . ');</script>');
			}

			if (!$settings['pvnm_profiler_page_write'] || ($settings['pvnm_profiler_page_write'] && $this->time >= $settings['pvnm_profiler_page_time'])) {
				var_dump('sql');
			}

			if ($settings['pvnm_profiler_page_email'] && $this->time >= $settings['pvnm_profiler_page_time']) {
				var_dump('email');
			}
		}
	}

	public function query($sql) {
		$time_start = microtime(true);

		$query = $this->db->query($sql);

		$query_time = microtime(true) - $time_start;

		$this->time += $query_time;

		$this->count_queries++;

		$this->queries[] = array(
			'query' => $sql,
			'time'  => $query_time,
			'date'  => date('Y.m.d H:i:s', $time_start)
		);

		return $query;
	}
			]]></add>
		</operation>
	</file>
</modification>