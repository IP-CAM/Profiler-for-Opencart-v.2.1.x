<?xml version="1.0" encoding="utf-8"?>
<modification>
	<code>pvnm_profiler</code>
	<name>Profiler</name>
	<version>1.0.0</version>
	<author>p0v1n0m@gmail.com</author>
	<link>mailto:p0v1n0m@gmail.com</link>
	<file path="system/library/db.php">
		<operation>
			<search><![CDATA[
public function query($sql) {
			]]></search>
			<add position="replace" offset="2"><![CDATA[
	private $time = 0;
	private $queries = array();
	private $config = array();

	public function __destruct() {
		if (!empty($this->config) && $this->config['pvnm_profiler_status']) {
			if ($this->config['pvnm_profiler_body_status']) {
				print_r('<pre style="font-size: 11px;">');
				print_r('Page: http://' . $_SERVER['SERVER_NAME'] . $_SERVER['REQUEST_URI'] . '<br>');

				if ($this->time >= $this->config['pvnm_profiler_page_time']) {
					print_r('Load Time SQL Queries: <span style="color: red !important;">' . $this->time . ' s</span><br>');
				} else {
					print_r('Load Time SQL Queries: ' . $this->time . ' s<br>');
				}

				print_r('SQL Queries (' . count($this->queries) . '):<br>');

				foreach ($this->queries as $query) {
					if ($query['time'] >= $this->config['pvnm_profiler_query_time']) {
						print_r('<span style="color: red !important;">' . $query['time'] . ' s - ' . $query['query'] . '</span><br>');
					} else {
						print_r('<span>' . $query['time'] . ' s - ' . $query['query'] . '</span><br>');
					}
				}

				print_r('</pre>');
			}

			if ($this->config['pvnm_profiler_console_status']) {
				$console_log = array();

				foreach ($this->queries as $query) {
					$console_log['queries'][] = $query['time'] . ' s - ' . $query['query'];
				}

				print_r('<script>console.info("Profiler: ' . $this->time . ' s - http://' . $_SERVER['SERVER_NAME'] . $_SERVER['REQUEST_URI'] . '");console.log(' . json_encode($console_log) . ');</script>');
			}

			if ($this->config['pvnm_profiler_page_write'] == 1 || ($this->config['pvnm_profiler_page_write'] == 2 && $this->time >= $this->config['pvnm_profiler_page_time'])) {
				$this->db->query("INSERT INTO " . DB_PREFIX . "pvnm_loading SET url = '" . $this->db->escape($_SERVER['SERVER_NAME'] . $_SERVER['REQUEST_URI']) . "', time = '" . (float)($this->time) . "', date = '" . $this->db->escape($this->queries[0]['date']) . "'");

				$loading_id = $this->db->getLastId();

				foreach ($this->queries as $query) {
					$console_log['queries'][] = $query['time'] . ' s - ' . $query['query'];

					$this->db->query("INSERT INTO " . DB_PREFIX . "pvnm_query SET 
						loading_id = '" . (int)$loading_id . "', 
						query = '" . $this->db->escape($query['query']) . "', 
						time = '" . (float)$query['time'] . "', 
						date = '" . $this->db->escape($query['date']) . "'
					");
				}
			}

			if ($this->config['pvnm_profiler_page_email'] && $this->time >= $this->config['pvnm_profiler_page_time']) {
				$input = array(
					'{url}',
					'{date}',
					'{time}',
					'{queries}'
				);

				$output = array(
					'url'     => 'http://' . $_SERVER['SERVER_NAME'] . $_SERVER['REQUEST_URI'],
					'date'    => $this->queries[0]['date'],
					'time'    => $this->time,
					'queries' => count($this->queries)
				);

				$subject = html_entity_decode(str_replace($input, $output, trim($this->config['pvnm_profiler_email_subject'][$this->config['config_admin_language']])), ENT_QUOTES, 'UTF-8');
				$message = html_entity_decode(str_replace($input, $output, $this->config['pvnm_profiler_email_message'][$this->config['config_admin_language']]), ENT_QUOTES, 'UTF-8');

				$html  = '<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/1999/REC-html401-19991224/strict.dtd">' . "\n";
				$html .= '<html>' . "\n";
				$html .= '  <head>' . "\n";
				$html .= '    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">' . "\n";
				$html .= '    <title>' . $subject . '</title>' . "\n";
				$html .= '  </head>' . "\n";
				$html .= '  <body>' . $message . '</body>' . "\n";
				$html .= '</html>' . "\n";

				$mail = new Mail();
				$mail->protocol = $this->config['config_mail_protocol'];
				$mail->parameter = $this->config['config_mail_parameter'];
				$mail->smtp_hostname = $this->config['config_mail_smtp_hostname'];
				$mail->smtp_username = $this->config['config_mail_smtp_username'];
				$mail->smtp_password = html_entity_decode($this->config['config_mail_smtp_password'], ENT_QUOTES, 'UTF-8');
				$mail->smtp_port = $this->config['config_mail_smtp_port'];
				$mail->smtp_timeout = $this->config['config_mail_smtp_timeout'];

				$mail->setTo($this->config['config_email']);
				$mail->setFrom($this->config['config_email']);
				$mail->setSender(html_entity_decode($this->config['config_name'], ENT_QUOTES, 'UTF-8'));
				$mail->setSubject($subject);
				$mail->setHtml($html);
				$mail->send();
			}
		}
	}

	public function query($sql) {
		$time_start = microtime(true);

		$query = $this->db->query($sql);

		if (substr($sql, 0, 32) == 'SELECT * FROM `' . DB_PREFIX . 'setting` WHERE') {
			$configs = array(
				'pvnm_profiler_status',
				'pvnm_profiler_body_status',
				'pvnm_profiler_console_status',
				'pvnm_profiler_query_time',
				'pvnm_profiler_page_time',
				'pvnm_profiler_page_write',
				'pvnm_profiler_page_email',
				'pvnm_profiler_email_subject',
				'pvnm_profiler_email_message',
				'config_mail_protocol',
				'config_mail_parameter',
				'config_mail_smtp_hostname',
				'config_mail_smtp_username',
				'config_mail_smtp_password',
				'config_mail_smtp_port',
				'config_mail_smtp_timeout',
				'config_email',
				'config_name',
				'config_admin_language'
			);

			foreach ($query->rows as $config) {
				if (in_array($config['key'], $configs)) {
					if (!$config['serialized']) {
						$this->config[$config['key']] = $config['value'];
					} else {
						$this->config[$config['key']] = json_decode($config['value'], true);
					}
				}
			}

		}

		$query_time = microtime(true) - $time_start;

		$this->time += $query_time;

		$this->queries[] = array(
			'query' => $sql,
			'time'  => $query_time,
			'date'  => date('Y.m.d H:i:s', $time_start)
		);

		return $query;
	}
			]]></add>
		</operation>
	</file>
	<file path="admin/controller/common/header.php">
		<operation>
			<search><![CDATA[
$data['logout'] = $this->url->link('common/logout', 'token=' . $this->session->data['token'], 'SSL');
			]]></search>
			<add position="after"><![CDATA[
			$this->load->language('module/pvnm_profiler');

			$data['text_profiler_title'] = $this->language->get('heading_title');
			$data['text_profiler_pages'] = $this->language->get('text_slow');
			$data['text_profiler_last'] = $this->language->get('text_last');
			$data['text_profiler_time'] = $this->language->get('column_time');
			$data['text_profiler_seconds'] = $this->language->get('text_seconds');
			$data['text_profiler_query'] = $this->language->get('column_query');
			$data['text_profiler_slow'] = $this->language->get('column_slow');
			$data['text_profiler_date'] = $this->language->get('column_date');

			$data['profiler_url'] = $this->url->link('module/pvnm_profiler/loadings', 'token=' . $this->session->data['token'] . '&filter_time=' . $this->config->get('pvnm_profiler_page_time'), 'SSL');

			if ($this->config->get('pvnm_profiler_status') && $this->config->get('pvnm_profiler_informer') && $this->user->hasPermission('access', 'module/pvnm_profiler') && $this->user->hasPermission('modify', 'module/pvnm_profiler')) {
				$data['profiler'] = true;

				$this->load->model('module/pvnm_profiler');

				$data['profiler_slow_total'] = $this->model_module_pvnm_profiler->getLoadingsTotal(array('filter_time' => $this->config->get('pvnm_profiler_page_time')));

				$results = $this->model_module_pvnm_profiler->getLoadings(array('filter_time' => $this->config->get('pvnm_profiler_page_time'), 'sort' => 'l.date', 'order' => 'DESC', 'start' => 0, 'limit' => 1));

				$data['profiler_time'] = $results[0]['time'];
				$data['profiler_query'] = $results[0]['query'];
				$data['profiler_slow'] = $results[0]['slow'];
				$data['profiler_date'] = $results[0]['date'];
			} else {
				$data['profiler'] = false;
			}
			]]></add>
		</operation>
	</file>
	<file path="admin/view/template/common/header.tpl">
		<operation>
			<search><![CDATA[
<ul class="nav pull-right">
			]]></search>
			<add position="after"><![CDATA[
	<?php if ($profiler) { ?>
	<li class="dropdown"><a class="dropdown-toggle" data-toggle="dropdown"><span class="label label-danger pull-left"><?php echo $profiler_slow_total; ?></span> <i class="fa fa-tasks fa-lg"></i></a>
	  <ul class="dropdown-menu dropdown-menu-right clear-dropdown">
		<li class="dropdown-header"><?php echo $text_profiler_title; ?></li>
		<li><a href="<?php echo $profiler_url; ?>" style="display: block; overflow: auto;"><span class="label label-danger pull-right"><?php echo $profiler_slow_total; ?></span><?php echo $text_profiler_pages; ?></a></li>
		<li class="divider"></li>
		<li class="dropdown-header"><?php echo $text_profiler_last; ?></li>
		<li><a><?php echo $text_profiler_time; ?><span class="label label-warning pull-right"><?php echo $profiler_time; ?> <?php echo $text_profiler_seconds; ?></span></a></li>
		<li><a><?php echo $text_profiler_query; ?><span class="label label-warning pull-right"><?php echo $profiler_query; ?></span></a></li>
		<li><a><?php echo $text_profiler_slow; ?><span class="label label-warning pull-right"><?php echo $profiler_slow; ?></span></a></li>
		<li><a><?php echo $text_profiler_date; ?><span class="label label-warning pull-right"><?php echo $profiler_date; ?></span></a></li>
	  </ul>
	</li>
	<?php } ?>
			]]></add>
		</operation>
	</file>
</modification>